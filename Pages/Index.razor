@page "/"
@inject LocalizationService localizationService;
@inject IJSRuntime JS
@using System.Globalization

<!-- ========================= hero-section start ========================= -->
<section id="home" class="video-section" tabindex="0" @onkeydown="HandleKeyDown">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-12">
                <div id="carouselMainControls" class="carousel slide" data-bs-ride="carousel" data-bs-interval="false">                    
                    <div class="carousel-inner">
                        <div class="carousel-item active">
                            <img src="images/videos/thumb/main/1.png" class="d-block w-100" style="cursor:pointer" alt="alt" @onclick="@(e=>OnClickThumb(1))">                                                       
                        </div>
                        @for(int i = 2; i <= 3; i++)
                        {
                            int index = i;                                                        
                            string imagePath = "images/videos/thumb/main/" + i + ".png";
                            <div class="carousel-item">                                                        
                                <img src=@imagePath class="d-block w-100" style="cursor:pointer" alt="alt" @onclick="@(e=>OnClickThumb(@index))">                                                       
                            </div>    
                        }
                    </div>
                    
                    <button id="main-carousel-prev" class="carousel-control-prev" type="button" data-bs-target="#carouselMainControls" data-bs-slide="prev">
                        <span class="oi oi-chevron-left" aria-hidden="true" style="color:black; font-size:80px"></span>
                        <span class="visually-hidden">Previous</span>
                    </button>
                        
                    <button id="main-carousel-next" class="carousel-control-next" type="button" data-bs-target="#carouselMainControls" data-bs-slide="next">
                        <span class="oi oi-chevron-right" aria-hidden="true" style="color:black; font-size:80px"></span>
                        <span class="visually-hidden">Next</span>
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- ========================= hero-section end ========================= -->

    <div id="modal-container">
        <div class="modal-background">
            <div class="modal">            
                <div class="container-fluid pt-160">                
                    <div class="row">
                        <div class="col-12">   
                            <table class="w-100">
                                <tr>
                                    <td style="15%" @onclick="@(e=>OnClickMoveVid(-1))">
                                        <button id="button_video_prev" class="video-control-prev">
                                            <span class="oi oi-chevron-left vertical-arrow" aria-hidden="true"></span>
                                            <span class="visually-hidden">Video Previous</span> 
                                        </button>                 
                                    </td>
                                    <td style="width:70%">                                    
                                        <div id="div_map" style="position:relative; width:100%">       
                                            <span id="button_close" class="oi oi-x" style="position:absolute; right:-80px; top:-150px;font-size:60px; cursor:pointer; padding:80px; z-index:999"></span>                                                                        
                                            <video id="Video1" width="100%" muted="muted">
                                                <source src="images/videos/mp4/main/1.mp4" type="video/mp4">                            
                                            </video>
                                            
                                            <div class="controlButtonList" style="display: none;">
                                                <div class="video-controls-pre" style="top:0%; left:0%;" @onclick="@(e=>OnClickSkip(-5))">
                                                    <span style="font-size:60px; margin:10px 7px 0 0;">-5</span><span id="video-backward" class="oi oi-reload" style="transform:scaleX(-1); font-size:60px; cursor:pointer"></span>    
                                                </div>
                                                <div class="video-controls-play" style="top:0%; left:25%;" @onclick="OnClickVidPlay">
                                                    <span id="play" class="oi oi-media-play" style="font-size:60px; cursor:pointer"></span>
                                                </div>
    
                                                <div class="video-controls-next" style="top:0%; right:0%;" @onclick="@(e=>OnClickSkip(5))">
                                                    <span id="video-forward" class="oi oi-reload" style="font-size:60px; cursor:pointer"></span><span style="font-size:60px; margin-top:10px;">+5</span>
                                                </div>
                                            </div>      
                                            <div style="position:absolute; margin-top:-130px; width:300px; height:200px;left:50%; margin-left:-150px; display:flex; align-items:center; justify-content:center; z-index:100;" @onclick="OnClickFullScreen">
                                                <button id="button_fullscreen" class="btn ControlButton" style="width:150px; height:50px; font-size:20px; background-color: rgba(0, 0, 0, 0.5); color:white;">                                                    
                                                    @{
                                                        string fscreen = "";
                                                        if(localizationService.language == "zh-CN" )
                                                        {
                                                            fscreen = "全屏";
                                                        }
                                                        else
                                                        {
                                                            fscreen = "Full Screen";
                                                        }
                                                    }
                                                    @fscreen
                                                </button>                                                                                        
                                            </div>                                                                        
                                        </div>
                                        
                                    </td>
                                    <td style="width:15%" @onclick="@(e=>OnClickMoveVid(1))">
                                        <button id="button_video_next" class="video-control-next">
                                            <span class="oi oi-chevron-right vertical-arrow" aria-hidden="true"></span>
                                            <span class="visually-hidden">Next</span>
                                        </button>
                                    </td>
                                </tr>
                            </table>
                            
                        </div>
                    </div>                
                </div>
            </div>
        </div>
    </div>
</section>

@code{    
    private IJSObjectReference? module;    
    private static int VideoType {get; set;}
    private bool IsFullScreen {get; set;}

    protected override void OnInitialized()    
    {
        base.OnInitialized(); 
    }    

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {        
        if (firstRender)
        {   
            //await JS.InvokeAsync<IJSObjectReference>("import", "/js/carousel-slider.js");                
            await JS.InvokeAsync<IJSObjectReference>("import", "/js/carousel-slider-main.js");                              
            module = await JS.InvokeAsync<IJSObjectReference>("import", "/js/video.js");
            VideoType = 3;       
            IsFullScreen = false;     
            if (module != null)
            {     
                await module.InvokeVoidAsync("OnLoad");
            }         
        }
    }  

    private async Task OnClickFullScreen()
    {
        string fullscreen = "";
        string close = "";
        if(localizationService.language == "zh-CN" )
        {
            fullscreen = "全屏";
            close = "关闭";
        }
        else
        {
            fullscreen = "Full Screen";
            close = "Close";
        }

        if (JS != null)
        {      
            if(!IsFullScreen)
            {
                IsFullScreen = true;
                await JS.InvokeVoidAsync("openFullscreen", "div_map", close);
            }
            else
            {
                IsFullScreen = false;
                await JS.InvokeVoidAsync("closeFullscreen", fullscreen);
            }
        }           
    }
     private async Task OnClickSkip(int seconds)
    {        
        if (module != null)
        {      
            await module.InvokeVoidAsync("skip", seconds);
        }        
    }
    private async Task OnClickMoveVid(int index)
    {        
        if (module != null)
        {                  
            await module.InvokeVoidAsync("OnClickMoveVid", VideoType, index);
        }        
    }

    private async Task OnClickVidPlay()
    {        
        if (module != null)
        {      
            await module.InvokeVoidAsync("vidplay");
        }        
    }

    private async Task OnClickThumb(int index)
    {        
        if (module != null)
        {     
            await module.InvokeVoidAsync("OnClickThumb", VideoType, index);
        }        
    }

    private async Task HandleKeyDown(KeyboardEventArgs e)
    {        
        if (module != null)
        {      
            bool IsModalActive = await module.InvokeAsync<bool>("IsModalActive");                
            if(IsModalActive)
            {
                if(e.Key =="ArrowLeft")
                    await OnClickMoveVid(-1);
                else if(e.Key =="ArrowRight")
                    await OnClickMoveVid(1);
            }
        }           
    }
}